---
title: "Data visualisation in R"
format: html
---

## Sample map 

```{r}
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggrepel)
library(ggtree)


metadata <- read_tsv("metadata.txt", show_col_types = FALSE) %>%
  rename(lat = Lat_Dec_Deg, long = Long_Dec_Deg)
metadata

eurafrica <- ne_countries(continent = c('africa', 'europe'), scale = "medium", returnclass = "sf")

ggplot(data = eurafrica) +
  geom_sf(col = "black", size = 0.1, fill = "white") +
  geom_point(data = metadata, aes(x = long, y = lat, col = Sex), alpha = 4/10, size = 4) +
  labs(x = "", y = "") +
  coord_sf(xlim = c(-12.5,12.5), ylim = c(27.5,42.5)) +
  scale_x_continuous(breaks = c(-10, 0, 10)) +
  scale_y_continuous(breaks = c(30, 35, 40)) +
  scale_color_manual(values = c("#1f77b4", "#ff7f0e")) + 
  theme_light() +
  theme(panel.grid = element_blank(), text = element_text(size=12, family="CM Roman")) +
  geom_label_repel(data = metadata, aes(x = long, y = lat, label = ID, col = Sex), 
                   label.size = 0.10, label.r = 0.3, seed = 2022, show.legend = FALSE, box.padding = 0.75)


ggsave("labelled_samples_map.png", height = 8, width = 7, dpi = 600)
```

## PCA

```{r}
file <- "autosomal_pca.csv"

pca %>%
  ggplot(aes(PC1, PC2, label = ID, col = Region_Narrow)) +
  geom_point(size = 3) +
  scale_color_manual(values = MetBrewer::met.brewer("Egypt", 3)) +
  geom_label_repel(box.padding = 0.6, max.overlaps = 100, seed = 2023, show.legend = FALSE) +
  labs(col = "Region", x = "PC1 (45.8%)", y = "PC2 (13.8%)", title = "PCA") + 
  theme_light() +
  theme(plot.title = element_text(hjust = 0.5))

```


## Autosomal pairwise $d_{xy}$

```{r}
hets <- read.csv("4D_heterozygosity.csv") %>%
  mutate(id1 = id,
         id2 = id) %>%
  rename(dxy = het) %>%
  select(id1, id2, dxy)

dxys <- read.csv(file <- "4D_pairwise_div.csv")

dxys <- dxys %>%
  mutate(id3 = id1, 
         id1 = id2,
         id2 = id3) %>%
  select(-id3) %>%
  rbind(dxys) %>%
  rbind(hets)

dxys %>%
  mutate(orderA = case_when(id1 == "PT_MI_7" ~ 1, id1 == "PT_MI_8" ~ 2, id1 == "PT_MI_61" ~ 4, id1 == "ES_MI_1647" ~ 8,
                            id1 == "PT_MI_86" ~ 3, id1 == "ES_MI_1680" ~ 6, id1 == "ES_MI_1682" ~ 7, id1 == "ES_MI_1683" ~ 5, 
                            id1 == "ES_MI_1684" ~ 9, id1 == "ES_MI_1686" ~ 10, id1 == "DZ_MI_1681" ~ 11, id1 == "DZ_MI_1685" ~ 12,
                            id1 == "DZ_MI_1624" ~ 13, id1 == "TN_MI_1619" ~ 14, id1 == "MA_MI_1620" ~ 15),
         
         orderB = case_when(id2 == "PT_MI_7" ~ 1, id2 == "PT_MI_8" ~ 2, id2 == "PT_MI_61" ~ 4, id2 == "ES_MI_1647" ~ 8,
                            id2 == "PT_MI_86" ~ 3, id2 == "ES_MI_1680" ~ 6, id2 == "ES_MI_1682" ~ 7, id2 == "ES_MI_1683" ~ 5, 
                            id2 == "ES_MI_1684" ~ 9, id2 == "ES_MI_1686" ~ 10, id2 == "DZ_MI_1681" ~ 11, id2 == "DZ_MI_1685" ~ 12,
                            id2 == "DZ_MI_1624" ~ 13, id2 == "TN_MI_1619" ~ 14, id2 == "MA_MI_1620" ~ 15)) %>%
  mutate(id1 = fct_reorder(id1, orderA),
         id2 = fct_reorder(id2, orderB)) %>%
  ggplot(aes(x = id1, y = id2, fill = dxy)) +
  geom_tile() +
  scale_fill_gradient(low = "#FFFFCC", high = "#FC4E2A") +
  labs(x = "", y = "", fill = expression(d[xy]), title = "Autosomal divergence at 4D sites") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, 
        colour = c(rep("#0f7ba2", 10), rep("#dd5129", 4), rep("#43b284", 1))), 
        panel.grid = element_blank(), 
        axis.text.y = element_text(colour = c(rep("#0f7ba2", 10), rep("#dd5129", 4), rep("#43b284", 1))),
        plot.title = element_text(hjust = 0.5))
```


## Neo-sex chromosome detection

### Neo-sex chromosome heterozygosity

```{r}
hets <- read.csv(here("neosex.4D.heterozygosities.csv"))

hets %>%
  left_join(iberia, by = c("id" = "ID")) %>%
  mutate(id = fct_reorder(id, order)) %>%
  ggplot(aes(x = id, y = het, fill = Sex)) +
  geom_col(position = "dodge") +
  scale_fill_manual(values = c("#1f77b4", "#ff7f0e")) +
  labs(y = "", x = "Heterozygosity", title = "Chromosome 14") +
  theme_light() + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
  facet_wrap(~Region, scales = "free_x")
```

### Trees

```{r}
aut <- read.tree("autosomes.contree")
neosex <- read.tree("outgrouped_neo_sex.contree")
metadata <- read.csv("metadata/id_sex_region.csv")

p1 <- ggtree(aut) %<+% metadata +
  geom_tippoint(aes(shape=Region, col = Sex), size = 3) +
  geom_nodelab(size = 2, hjust = 1.2, vjust = -0.4) +
  scale_color_manual(values = c("#1f77b4", "#ff7f0e")) +
  ggtitle("Autosomes") +
  theme(plot.title = element_text(hjust = 0.5))

p2 <- ggtree(neosex) %<+% metadata +
  geom_tippoint(aes(shape=Region, col = Sex), size = 3) +
  geom_nodelab(size = 2, hjust = 1.2, vjust = -0.4) +
  scale_color_manual(values = c("#1f77b4", "#ff7f0e")) +
  ggtitle("Chromosome 14") +
  theme(plot.title = element_text(hjust = 0.5))

p1 + p2 + plot_layout(guides = "collect")
```


## Break-point detection analysis

```{r}
library(bcp)
library(patchwork)

das <- read.csv("neosex.da.masked.50kb.csv") %>%
    group_by(mid_Mb) %>%
    summarise(mean_da = mean(da))

res = bcp(y = das$mean_da, burnin = 500, mcmc = 5000)

a <- das %>%
    cbind(res$posterior.mean, res$posterior.prob) %>%
    rename(mean = X1, post = `res$posterior.prob`) %>%
    ggplot() +
    geom_point(aes(mid_Mb / 1e6, mean_da), size = 0.7) +
    geom_line(aes(mid_Mb / 1e6, mean, col='red')) +
    labs(x = "", y = expression(d[a]), title = "Neo-sex chromosome") +
    theme_light() + 
    theme(legend.position = "None", plot.title = element_text(hjust = 0.5))

b <- das %>%
    cbind(res$posterior.mean, res$posterior.prob) %>%
    rename(mean = X1, post = `res$posterior.prob`) %>%
    ggplot() +
    geom_line(aes(mid_Mb / 1e6, post)) +
    theme_light() + 
    labs(y = "Posterior Probability", x = "Position (Mb)")
    
plot <- a / b
plot
```

## Mitochondrial and neo-W trees

```{r}
mit <- read.tree("iberian_females.contree")
neow <- read.tree("aligned_neoW.contree")

neow$tip.label = c("ES_MI_1680", "ES_MI_1682", "ES_MI_1686", "ES_MI_1683", "PT_MI_61", "PT_MI_86", "ES_MI_1684")
mit$edge.length = mit$edge.length * 450
neow$edge.length = neow$edge.length * 450

p1 <- ggtree(mit, layout='roundrect') %>% flip(4, 12) %>% flip(5, 11) +  geom_nodelab(size = 3, hjust = 1.2, vjust = -0.4)

p2 <- ggtree(neow) %>% flip(5, 4)

d1 <- p1$data
d2 <- p2$data

d2$x <- max(d2$x) - d2$x + max(d1$x) + 1

pp <- p1 + geom_tree(data=d2, layout='roundrect') +      
  ggnewscale::new_scale_fill()

dd <- bind_rows(d1, d2) %>%
  filter(branch > 0)  %>%
  filter(isTip == "TRUE")

pp + geom_line(aes(x, y, group=label), data=dd, color='grey') +
  geom_tiplab(hjust = -0.05) +
  geom_tiplab(data = d2, hjust=1.05) +
  geom_nodelab(data = d2, size = 3, hjust = -0.1, vjust = -0.4)
```

## Gene expression and gene degeneration

```{r}
df <- read.csv("genes_expression_degeneration.csv")

df %>% filter(k0_k4 < 100) %>%
  filter(region == "plat_1") %>%
  ggplot(aes(k0_k4, percW, col = impact)) +
  geom_point(size = 2.5, alpha = 0.8) +
  scale_color_manual(values = c("#dd5129", "#0f7ba2"),
                     labels = c("Non-fonctional",
                                "Potentially functional")) +
  labs(x = "K4 / K0", y = "Expresion bias", col = "Functionality") + 
  theme_light()
```